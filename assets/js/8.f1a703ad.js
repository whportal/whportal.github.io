(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{482:function(t,s,a){t.exports=a.p+"assets/img/image-20200713103906219.1a90630e.png"},483:function(t,s,a){t.exports=a.p+"assets/img/image-20200713101026494.3231408f.png"},484:function(t,s,a){t.exports=a.p+"assets/img/image-20200713101047687.86a6e25e.png"},499:function(t,s,a){"use strict";a.r(s);var n=a(4),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("div",{staticClass:"custom-block tip"},[n("p",[t._v("Java Nio 的介绍与基本使用")])]),t._v(" "),n("h2",{attrs:{id:"nio-与-io区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nio-与-io区别"}},[t._v("#")]),t._v(" "),n("code",[t._v("NIO")]),t._v(" 与 "),n("code",[t._v("IO")]),t._v("区别")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("IO")]),t._v(" "),n("th",[t._v("NIO")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("面向流（Stream Oriented）")]),t._v(" "),n("td",[t._v("面向缓冲区（Buffer Oriented）")])]),t._v(" "),n("tr",[n("td",[t._v("阻塞 IO（Blocking IO）")]),t._v(" "),n("td",[t._v("非阻塞 IO（Non Blocking IO）")])]),t._v(" "),n("tr",[n("td",[t._v("无")]),t._v(" "),n("td",[t._v("选择器（Selectors）")])])])]),t._v(" "),n("h2",{attrs:{id:"通道和缓冲区"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#通道和缓冲区"}},[t._v("#")]),t._v(" 通道和缓冲区")]),t._v(" "),n("ul",[n("li",[t._v("通道（Channel）和缓冲区（Buffer）。通道标识打开到 IO 设备（例如：文件、套接字）的连接。")]),t._v(" "),n("li",[t._v("若要使用 NIO 系统，需要获取用于连接 IO 设备的通道以及用于容纳数据的缓冲区。然后操作缓冲区，对数据进行处理。")]),t._v(" "),n("li",[t._v("简单的说就是：Channel 负责传输数据，Buffer 负责存储数据")])]),t._v(" "),n("h3",{attrs:{id:"缓冲区（buffer）"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#缓冲区（buffer）"}},[t._v("#")]),t._v(" 缓冲区（Buffer）")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("缓冲区：一个用于特定基本数据类型的容器，由 java.nio 包定义的，所有缓冲区都是 Buffer 抽象类的子类。")])]),t._v(" "),n("li",[n("p",[t._v("Java NIO 中的 Buffer 主要用于与 NIO 通道进行交互，数据是从通道读入缓冲区，从缓冲区写入通道的。")])]),t._v(" "),n("li",[n("p",[t._v("缓冲区就像一个数组，可以保存多个相同类型的数据，根据数据类型的不同（boolean除外），有以下Buffer常用子类：")]),t._v(" "),n("ul",[n("li",[t._v("ByteBuffer")]),t._v(" "),n("li",[t._v("CharBuffer")]),t._v(" "),n("li",[t._v("ShortBuffer")]),t._v(" "),n("li",[t._v("IntBuffer")]),t._v(" "),n("li",[t._v("LongBuffer")]),t._v(" "),n("li",[t._v("FloatBuffer")]),t._v(" "),n("li",[t._v("DoubleBuffer")])])]),t._v(" "),n("li",[n("p",[t._v("以上数据类型除了数据类型不同，操作方式类似，都是通过以下方法获取 Buffer 对象")]),t._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建一个容量为 capacity 的 XXXBuffer 对象")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("XxxBuffer")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("allocate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" capacity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br")])])])]),t._v(" "),n("h3",{attrs:{id:"缓冲区的基本属性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#缓冲区的基本属性"}},[t._v("#")]),t._v(" 缓冲区的基本属性")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("容量（capacity）：表示 Buffer 最大数据容量，缓冲区容量不能为负，并且创建以后不能修改")])]),t._v(" "),n("li",[n("p",[t._v("限制（limit）：第一个不应该读取或写入的数据的索引，即位于 limit 后的数据不可读写。缓冲区的限制不能为负，并且不能大于其限制。表示缓冲区可以操作数据的大小")])]),t._v(" "),n("li",[n("p",[t._v("位置（position）：下一个要读取或写入的数据的索引。缓冲区的位置不能为负，并且不能大于其限制。表示缓冲区中正在操作数据的位置")])]),t._v(" "),n("li",[n("p",[t._v("标记（mark）与重置（reset）：标记是一个索引，通过 Buffer 中的 mark() 方法指定 Buffer 中的一个特定的 position ，之后可以通过调用 reset() 方法恢复到这个 position。记录的是当前 position 的位置。")]),t._v(" "),n("blockquote",[n("p",[t._v("标记、位置、限制、容量遵守以下不变式：")]),t._v(" "),n("p",[t._v("0 <= mark <= position <= limit <= capacicy")])])])]),t._v(" "),n("p",[n("img",{attrs:{src:a(482),alt:"image-20200713103906219"}})]),t._v(" "),n("h3",{attrs:{id:"buffer-常用方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#buffer-常用方法"}},[t._v("#")]),t._v(" Buffer 常用方法")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("方法")]),t._v(" "),n("th",[t._v("描述")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("Buffer clear()")]),t._v(" "),n("td",[t._v("清空缓冲区并返回对缓冲区的引用")])]),t._v(" "),n("tr",[n("td",[t._v("Buffer flip()")]),t._v(" "),n("td",[t._v("将缓冲区的界限限制为当前位置，并将当前位置重置为0")])]),t._v(" "),n("tr",[n("td",[t._v("int capacity()")]),t._v(" "),n("td",[t._v("返回 Buffer 的 capacity 大小")])]),t._v(" "),n("tr",[n("td",[t._v("boolean hasRemaining()")]),t._v(" "),n("td",[t._v("判断缓冲区是否还有元素")])]),t._v(" "),n("tr",[n("td",[t._v("int limit()")]),t._v(" "),n("td",[t._v("返回 Buffer 的界限(limit) 的位置")])]),t._v(" "),n("tr",[n("td",[t._v("Buffer limit（int n）")]),t._v(" "),n("td",[t._v("将设置缓冲区界限为 n，并返回一个具有新 limit 的缓冲区对象")])]),t._v(" "),n("tr",[n("td",[t._v("Buffer mark()")]),t._v(" "),n("td",[t._v("对缓冲区设置标记")])]),t._v(" "),n("tr",[n("td",[t._v("int position()")]),t._v(" "),n("td",[t._v("返回缓冲区的当前位置 position")])]),t._v(" "),n("tr",[n("td",[t._v("Buffer position(int n)")]),t._v(" "),n("td",[t._v("将设置缓冲区的当前位置为n，并返回修改后的 Buffer 对象")])]),t._v(" "),n("tr",[n("td",[t._v("int remaining()")]),t._v(" "),n("td",[t._v("返回 position 和 limit 之间的元素个数")])]),t._v(" "),n("tr",[n("td",[t._v("Buffer reset()")]),t._v(" "),n("td",[t._v("将位置 position 转到以前设置的 mark 所在的位置")])]),t._v(" "),n("tr",[n("td",[t._v("Buffer rewind()")]),t._v(" "),n("td",[t._v("将位置设为 0，取消设置的 mark")])])])]),t._v(" "),n("h3",{attrs:{id:"缓冲区的数据操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#缓冲区的数据操作"}},[t._v("#")]),t._v(" 缓冲区的数据操作")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("Buffer 所有的子类提供了两个用于数据操作的方法： get() 与 put() 方法")])]),t._v(" "),n("li",[n("p",[t._v("获取 Buffer 中的数据")]),t._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 读取单个字节")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n    \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 批量读取多个字节到dst中")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" dst"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n    \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 读取指定索引位置的字节（不会移动 position）")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" index"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br")])])]),t._v(" "),n("li",[n("p",[t._v("放入数据到 Buffer 中")]),t._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将给定的单个字节写入到缓冲区的当前位置")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将 src 的字节写入缓冲区的当前位置")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" src"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将指定字节写入到缓冲区的索引位置（不会移动 position）")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" index"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br")])])])]),t._v(" "),n("h3",{attrs:{id:"直接与非直接缓冲区"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#直接与非直接缓冲区"}},[t._v("#")]),t._v(" 直接与非直接缓冲区")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("字节缓冲区要么是直接的，要么是非直接的。如果为直接字节缓冲区，则 java 虚拟机会尽最大努力直接在此缓冲区执行本机 I/O 操作，也就是说，在每次调用基础操作系统的一个本机 I/O 操作之前（或之后），虚拟机都会尽量避免将缓冲区的内容复制到中间缓冲区（或冲中间缓冲区中复制内容）")])]),t._v(" "),n("li",[n("p",[t._v("直接字节缓冲区可以通过调用此类的 allocateDirect() 工厂方法创建，此方法返回的缓冲区进行分配和取消分配所需成本通常高于非直接缓冲区。直接缓冲区的内容可以驻留在常规的垃圾回收堆之外，因此，他们对应用程序的内存需求量造成的影响可能不明显。所以，建议将直接缓冲区主要分配给那些易受基础系统的本机 I/O 操作影响的大型、持久的缓冲区。一般情况下。最好仅在直接缓冲区能在程序性能方面带来明显好处时分配他们。")])]),t._v(" "),n("li",[n("p",[t._v("直接字节缓冲区还可以通过 FileChannel 的 map() 方法将文件区域直接映射到内存中来创建。该方法返回 MappedByteBuffer。java 平台的实现有助于通过 JNI 从本机代码创建直接字节缓冲区。如果以上这些缓冲区中的某个缓冲区实例指向的是不可访问的内存区域，则试图访问该区域不会更改缓冲区的内容，并且将会在访问期间或稍后的某个时间导致抛出不确定的异常。")])]),t._v(" "),n("li",[n("p",[t._v("字节缓冲区是直接缓冲区还是非直接缓冲区还可以以通过调用其 isDirect() 方法来确定。提供此方法是为了能够在性能关键型代码中执行显式缓冲区管理。")]),t._v(" "),n("blockquote",[n("p",[t._v("非直接缓冲区：通过 allocate() 方法分配缓冲区，将缓冲区建立在 JVM 内存中")]),t._v(" "),n("p",[t._v("直接缓冲区：")]),t._v(" "),n("ul",[n("li",[t._v("通过 allocateDirect() 方法分配直接缓冲区，将缓冲区建立在物理内存中")]),t._v(" "),n("li",[t._v("此方法返回的缓冲区进行分配和取消分配所需成本通常高于非直接缓冲区")]),t._v(" "),n("li",[t._v("直接缓冲区的内容可以驻留在常规的垃圾回收堆之外")])])])])]),t._v(" "),n("p",[n("img",{attrs:{src:a(483),alt:"image-20200713101026494"}}),t._v(" "),n("img",{attrs:{src:a(484),alt:"image-20200713101047687"}})]),t._v(" "),n("h3",{attrs:{id:"通道（channel）"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#通道（channel）"}},[t._v("#")]),t._v(" 通道（Channel）")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("通道：由 java.nio.channels 包定义，表示 IO 源于目标打开的连接。Channel 类似于传统的 “流”。只不过 Channel 本身不能直接访问数据，Channel 只能与 Buffer 进行交互。")])]),t._v(" "),n("li",[n("p",[t._v("java 为 Channel 接口提供的最主要实现类如下：")]),t._v(" "),n("ul",[n("li",[t._v("FileChannel ：用于读取、写入、映射和操作文件的通道")]),t._v(" "),n("li",[t._v("DatagramChannel：通过 UDP 读写网络中的数据通信")]),t._v(" "),n("li",[t._v("SocketChannel：通过 TCP 读写网络中的数据")]),t._v(" "),n("li",[t._v("ServerSocketChannel：可以监听新进来的 TCP 连接，对每一个新进来的连接都会创建一个 SocketChannel。")])])]),t._v(" "),n("li",[n("p",[t._v("获取通道的一种方式是对支持通道的对象调用 getChannel() 方法。支持通道的类如下：")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("FileInputStream")])]),t._v(" "),n("li",[n("p",[t._v("FileOutputStream")])]),t._v(" "),n("li",[n("p",[t._v("RandomAccessFile")])]),t._v(" "),n("li",[n("p",[t._v("DatagramSocket")])]),t._v(" "),n("li",[n("p",[t._v("Socket")])]),t._v(" "),n("li",[n("p",[t._v("ServerSocket")]),t._v(" "),n("blockquote",[n("p",[t._v("获取通道的其他方式是使用 Files 类的静态方法 newByteChannel()")])])])])])]),t._v(" "),n("h4",{attrs:{id:"通道常用方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#通道常用方法"}},[t._v("#")]),t._v(" 通道常用方法")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("方法")]),t._v(" "),n("th",[t._v("描述")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("int read(ByteBuffer dst)")]),t._v(" "),n("td",[t._v("从 Channel 中读取数据到 ByteBuffer")])]),t._v(" "),n("tr",[n("td",[t._v("long read(ByteBuffer[] dsts)")]),t._v(" "),n("td",[t._v("将 Channel 中的数据 “分散”读取到 ByteBuffer[]")])]),t._v(" "),n("tr",[n("td",[t._v("int write(ByteBuffer src)")]),t._v(" "),n("td",[t._v("将 ByteBuffer 中的数据写入到 Channel")])]),t._v(" "),n("tr",[n("td",[t._v("long write(ByteBuffer[] srcs)")]),t._v(" "),n("td",[t._v("将 ByteBuffer[] 中的数据“聚集”写入到 Channel")])]),t._v(" "),n("tr",[n("td",[t._v("long position()")]),t._v(" "),n("td",[t._v("返回此通道的文件位置")])]),t._v(" "),n("tr",[n("td",[t._v("FileChannel position(long p)")]),t._v(" "),n("td",[t._v("设置此通道的文件位置")])]),t._v(" "),n("tr",[n("td",[t._v("long size()")]),t._v(" "),n("td",[t._v("返回此通道的文件的当前大小")])]),t._v(" "),n("tr",[n("td",[t._v("FileChannel truncate(long s)")]),t._v(" "),n("td",[t._v("将此通道的文件截取为指定大小")])]),t._v(" "),n("tr",[n("td",[t._v("void force(boolean metaData)")]),t._v(" "),n("td",[t._v("强制将所有对此通道的文件更新写入到存储设备中")])])])]),t._v(" "),n("blockquote",[n("p",[t._v("分散(Scatter)与聚集(Gather)")]),t._v(" "),n("ul",[n("li",[t._v("分散读取（Scattering Reads）：将通道中的数据分散到多个缓冲区中")]),t._v(" "),n("li",[t._v("聚集写入（Gathering Writes）：将多个缓冲区中的数据聚集到通道中")])])]),t._v(" "),n("h2",{attrs:{id:"选择器（selector）"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#选择器（selector）"}},[t._v("#")]),t._v(" 选择器（Selector）")]),t._v(" "),n("p",[t._v("选择器（Selector） 是 SelectableChannle 对象的多路复用器，Selector 可以同时监控多个 SelectableChannel 的 IO 状况，也就是说，利用 Selector可使一个单独的线程管理多个 Channel。Selector 是非阻塞 IO 的核心。")]),t._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* IO 完成网络通信的三个核心：\n * \n * 1、通道(Channel):负责连接\n *      java.nio.channels.Channel 接口：\n *           |--SelectableChannel\n *               |--SocketChannel\n *               |--ServerSocketChannel\n *               |--DatagramChannel\n *               \n *               |--Pipe.SinkChannel\n *               |--Pipe.SourceChannel\n *               \n * 2.缓冲区(Buffer):负责数据的存取\n * \n * 3.选择器(Selector):是 SelectableChannel 的多路复用器。用于监控SelectableChannel的IO状况\n */")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br")])]),n("h4",{attrs:{id:"常用方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常用方法"}},[t._v("#")]),t._v(" 常用方法")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("方法")]),t._v(" "),n("th",[t._v("描述")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("Set keys()")]),t._v(" "),n("td",[t._v("所有的 SelectionKey 集合。代表注册在该 Selector 上的 Channel")])]),t._v(" "),n("tr",[n("td",[t._v("Set selectedKeys()")]),t._v(" "),n("td",[t._v("被选择的 SelectionKey 集合。返回此 Selector 的已选择键集")])]),t._v(" "),n("tr",[n("td",[t._v("int select()")]),t._v(" "),n("td",[t._v("监控所有注册的 Channel 当他们中有需要处理的 IO 操作时，该方法但会，并将对应的 SelectionKey 加入被选择的 SelectionKey 集合中，该方法返回这些 Channel 的数量")])]),t._v(" "),n("tr",[n("td",[t._v("int select(long timeout)")]),t._v(" "),n("td",[t._v("可以设置超时时长的 select() 操作")])]),t._v(" "),n("tr",[n("td",[t._v("int selectNow()")]),t._v(" "),n("td",[t._v("执行一个立即返回的 select() 操作，该方法不会阻塞线程")])]),t._v(" "),n("tr",[n("td",[t._v("Selector wakeup()")]),t._v(" "),n("td",[t._v("使一个还未返回的 select() 方法立即返回")])]),t._v(" "),n("tr",[n("td",[t._v("void close()")]),t._v(" "),n("td",[t._v("关闭选择器")])])])]),t._v(" "),n("h3",{attrs:{id:"selectionkey"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#selectionkey"}},[t._v("#")]),t._v(" "),n("code",[t._v("SelectionKey")])]),t._v(" "),n("p",[t._v("当调用 register(Selector sel,int ops) 将通道注册选择器时，选择器对通道的监听事件，需要通过第二个参数 "),n("code",[t._v("ops")]),t._v(" 指定。")]),t._v(" "),n("p",[t._v("可以监听的时间类型（由 SelectionKey 的四个常量表示）")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("读："),n("code",[t._v("SelectionKey.OP_READ (1)")])])]),t._v(" "),n("li",[n("p",[t._v("写："),n("code",[t._v("SelectionKey.OP_WRITE (4)")])])]),t._v(" "),n("li",[n("p",[t._v("连接："),n("code",[t._v("SelectionKey.OP_CONNECT (8)")])])]),t._v(" "),n("li",[n("p",[t._v("接收："),n("code",[t._v("SelectionKey.OP_ACCEPT (16)")])]),t._v(" "),n("blockquote",[n("p",[t._v("若注册时不止监听一个事件，可以使用“位或”操作符连接")])])])]),t._v(" "),n("p",[t._v("SelectionKey：表示 SelectableChannel 和 Selector 之间的注册关系。每次向选择器注册通道时就会选择一个事件（选择键）。选择键包含两个表示为整数值的操作集。操作集的每一位都表示该键的通道所支持的一类可选择操作。")]),t._v(" "),n("h4",{attrs:{id:"常用方法-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常用方法-2"}},[t._v("#")]),t._v(" 常用方法")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("方法")]),t._v(" "),n("th",[t._v("描述")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("int interestOps()")]),t._v(" "),n("td",[t._v("获取感兴趣事件集合")])]),t._v(" "),n("tr",[n("td",[t._v("int readyOps()")]),t._v(" "),n("td",[t._v("获取通道已经准备就绪的操作的集合")])]),t._v(" "),n("tr",[n("td",[t._v("SelectableChannel channel()")]),t._v(" "),n("td",[t._v("获取注册通道")])]),t._v(" "),n("tr",[n("td",[t._v("Selector selector()")]),t._v(" "),n("td",[t._v("返回选择器")])]),t._v(" "),n("tr",[n("td",[t._v("boolean isReadable()")]),t._v(" "),n("td",[t._v("检测 Channel 中读事件是否就绪")])]),t._v(" "),n("tr",[n("td",[t._v("boolean isWritable()")]),t._v(" "),n("td",[t._v("检测 Channel  中写事件是否就绪")])]),t._v(" "),n("tr",[n("td",[t._v("boolean isConnectable()")]),t._v(" "),n("td",[t._v("检测 Channel 中连接是否就绪")])]),t._v(" "),n("tr",[n("td",[t._v("boolean isAcceptable()")]),t._v(" "),n("td",[t._v("检测 Channel 中接收是否就绪")])])])]),t._v(" "),n("h2",{attrs:{id:"path、paths、files"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#path、paths、files"}},[t._v("#")]),t._v(" "),n("code",[t._v("Path")]),t._v("、"),n("code",[t._v("Paths")]),t._v("、"),n("code",[t._v("Files")])]),t._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[t._v("java"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nio"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),t._v(" 接口代表一个平台无关的平台路径，描述了目录结构中文件的位置。\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Paths")]),t._v(" 提供的 "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 方法用来获取 "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),t._v(" 对象："),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" first"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" … more"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 用于将多个字符串串连成路径。\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),t._v(" 常用方法：\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("endsWith")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 判断是否以 path 路径结束\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("startsWith")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 判断是否以 path 路径开始\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isAbsolute")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 判断是否是绝对路径\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFileName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 返回与调用 "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),t._v(" 对象关联的文件名\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" idx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 返回的指定索引位置 idx 的路径名称\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getNameCount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 返回"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),t._v(" 根目录后面元素的数量\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getParent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" ：返回"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),t._v("对象包含整个路径，不包含"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),t._v(" 对象指定的文件路径\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getRoot")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" ：返回调用 "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),t._v(" 对象的根路径\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),t._v(" p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("将相对路径解析为绝对路径\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("toAbsolutePath")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 作为绝对路径返回调用 "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),t._v(" 对象\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" ： 返回调用 "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),t._v(" 对象的字符串表示形式\n    \n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Files")]),t._v(" 类\njava"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nio"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Files")]),t._v(" 用于操作文件或目录的工具类。\n\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Files")]),t._v("常用方法：\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("copy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),t._v(" src"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),t._v(" dest"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CopyOption")]),t._v(" … how"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 文件的复制\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createDirectory")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),t._v(" path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileAttribute")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" … attr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 创建一个目录\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createFile")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),t._v(" path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileAttribute")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" … arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 创建一个文件\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("delete")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),t._v(" path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 删除一个文件\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("move")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),t._v(" src"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),t._v(" dest"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CopyOption")]),t._v("…how"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 将 src 移动到 dest 位置\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),t._v(" path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 返回 path 指定文件的大小\n    \n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Files")]),t._v("常用方法：用于判断\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("exists")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),t._v(" path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LinkOption")]),t._v(" … opts"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 判断文件是否存在\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isDirectory")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),t._v(" path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LinkOption")]),t._v(" … opts"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 判断是否是目录\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isExecutable")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),t._v(" path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 判断是否是可执行文件\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isHidden")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),t._v(" path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 判断是否是隐藏文件\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isReadable")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),t._v(" path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 判断文件是否可读\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isWritable")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),t._v(" path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 判断文件是否可写\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("notExists")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),t._v(" path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LinkOption")]),t._v(" … opts"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 判断文件是否不存在\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BasicFileAttributes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("readAttributes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),t._v(" path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" type"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LinkOption")]),t._v("…options"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 获取与 path 指定的文件相关联的属性。\n    \n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Files")]),t._v("常用方法：用于操作内容\n\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SeekableByteChannel")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("newByteChannel")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),t._v(" path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OpenOption")]),t._v("…how"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 获取与指定文件的连接，how 指定打开方式。\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DirectoryStream")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("newDirectoryStream")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),t._v(" path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 打开 path 指定的目录\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InputStream")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("newInputStream")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),t._v(" path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OpenOption")]),t._v("…how"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("获取 "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InputStream")]),t._v(" 对象\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OutputStream")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("newOutputStream")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),t._v(" path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OpenOption")]),t._v("…how"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 获取 "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OutputStream")]),t._v(" 对象\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br"),n("span",{staticClass:"line-number"},[t._v("27")]),n("br"),n("span",{staticClass:"line-number"},[t._v("28")]),n("br"),n("span",{staticClass:"line-number"},[t._v("29")]),n("br"),n("span",{staticClass:"line-number"},[t._v("30")]),n("br"),n("span",{staticClass:"line-number"},[t._v("31")]),n("br"),n("span",{staticClass:"line-number"},[t._v("32")]),n("br"),n("span",{staticClass:"line-number"},[t._v("33")]),n("br"),n("span",{staticClass:"line-number"},[t._v("34")]),n("br"),n("span",{staticClass:"line-number"},[t._v("35")]),n("br"),n("span",{staticClass:"line-number"},[t._v("36")]),n("br"),n("span",{staticClass:"line-number"},[t._v("37")]),n("br"),n("span",{staticClass:"line-number"},[t._v("38")]),n("br"),n("span",{staticClass:"line-number"},[t._v("39")]),n("br"),n("span",{staticClass:"line-number"},[t._v("40")]),n("br"),n("span",{staticClass:"line-number"},[t._v("41")]),n("br"),n("span",{staticClass:"line-number"},[t._v("42")]),n("br"),n("span",{staticClass:"line-number"},[t._v("43")]),n("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);